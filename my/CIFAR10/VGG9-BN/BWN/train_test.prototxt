name: "CIFAR10_vgg"
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 32
    mean_file: "/home/zhengzhe/Data/cifar10/mean.binaryproto"
  }
  data_param {
    source: "/home/zhengzhe/Data/cifar10/cifar10_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {	
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 32
    mean_file: "/home/zhengzhe/Data/cifar10/mean.binaryproto"
  }
  data_param {
    source: "/home/zhengzhe/Data/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
### convolutionC1-C2
layer {
  name: "conv1"
  type: "BinaryConvolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
  debug_param{
    binary_relax:true
	update_lamda:10
  }
}
##batch normalization1
layer {
  bottom: "conv1"
  top: "conv1_bn"
  name: "bn1_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv1_bn"
  top: "conv1_sc"
  name: "bn1_scal"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
###relu-1
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1_sc"
  top: "conv1_sc"
}
layer {
  name: "conv2"
  type: "BinaryConvolution"
  bottom: "conv1_sc"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
  debug_param{
    binary_relax:true
	update_lamda:10
	phase1_iter:50000
  }
}
##batch normalization1
layer {
  bottom: "conv2"
  top: "conv2_bn"
  name: "bn2_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv2_bn"
  top: "conv2_sc"
  name: "bn2_scal"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
###relu-2
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2_sc"
  top: "conv2_sc"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv2_sc"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "pool1"
  top: "pool1"
  dropout_param {
    dropout_ratio: 0.25
  }
}

#c3-c4
layer {
  name: "conv3"
  type: "BinaryConvolution"
  bottom: "pool1"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
  debug_param{
    binary_relax:true
	update_lamda:10
  }
}
##batch normalization1
layer {
  bottom: "conv3"
  top: "conv3_bn"
  name: "bn3_bn"
  type: "BatchNorm"
}

layer {
  bottom: "conv3_bn"
  top: "conv3_sc"
  name: "bn3_scal"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
###relu-3
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3_sc"
  top: "conv3_sc"
}
layer {
  name: "conv4"
  type: "BinaryConvolution"
  bottom: "conv3_sc"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
  debug_param{
    binary_relax:true
	update_lamda:10
  }
}
##batch normalization1
layer {
  bottom: "conv4"
  top: "conv4_bn"
  name: "bn4_bn"
  type: "BatchNorm"
}

layer {
  bottom: "conv4_bn"
  top: "conv4_sc"
  name: "bn4_scal"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
#relu-4
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4_sc"
  top: "conv4_sc"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv4_sc"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "drop2"
  type: "Dropout"
  bottom: "pool2"
  top: "pool2"
  dropout_param {
    dropout_ratio: 0.25
  }
}

layer {
  name: "conv5"
  type: "BinaryConvolution"
  bottom: "pool2"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
  debug_param{
    binary_relax:true
	update_lamda:10
  }
}
##batch normalization1
layer {
  bottom: "conv5"
  top: "conv5_bn"
  name: "bn5_bn"
  type: "BatchNorm"
}

layer {
  bottom: "conv5_bn"
  top: "conv5_sc"
  name: "bn5_scal"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
###relu-5
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5_sc"
  top: "conv5_sc"
}
layer {
  name: "conv6"
  type: "BinaryConvolution"
  bottom: "conv5_sc"
  top: "conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
  debug_param{
    binary_relax:true
	update_lamda:10
  }
}
##batch normalization1
layer {
  bottom: "conv6"
  top: "conv6_bn"
  name: "bn6_bn"
  type: "BatchNorm"
}
layer {
  bottom: "conv6_bn"
  top: "conv6_sc"
  name: "bn6_scal"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
###relu-6
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv6_sc"
  top: "conv6_sc"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv6_sc"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "drop3"
  type: "Dropout"
  bottom: "pool3"
  top: "pool3"
  dropout_param {
    dropout_ratio: 0.25
  }
}

layer {
  name: "fc7"
  type: "BinaryInnerProduct"
  bottom: "pool3"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
  debug_param{
    binary_relax:true
	update_lamda:10
  }
}
##batch normalization1
layer {
  bottom: "fc7"
  top: "fc7_bn"
  name: "bn7_bn"
  type: "BatchNorm"
}
layer {
  bottom: "fc7_bn"
  top: "fc7_sc"
  name: "bn7_scal"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
##relu
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7_sc"
  top: "fc7_sc"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7_sc"
  top: "fc7_sc"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "BinaryInnerProduct"
  bottom: "fc7_sc"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
  debug_param{
    binary_relax:true
	update_lamda:10
  }
}
###batch normalization1
layer {
  bottom: "fc8"
  top: "fc8_bn"
  name: "bn8_bn"
  type: "BatchNorm"
}

layer {
  bottom: "fc8_bn"
  top: "fc8_sc"
  name: "bn8_scal"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "relu8"
  type: "ReLU"
  bottom: "fc8_sc"
  top: "fc8_sc"
}
layer {
  name: "drop8"
  type: "Dropout"
  bottom: "fc8_sc"
  top: "fc8_sc"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc9"
  type: "BinaryInnerProduct"
  bottom: "fc8_sc"
  top: "fc9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.01
     }
  }
  debug_param{
    binary_relax:true
	update_lamda:10
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc9"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc9"
  bottom: "label"
  top: "loss"
}
